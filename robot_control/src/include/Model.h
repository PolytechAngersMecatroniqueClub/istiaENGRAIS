//********************************************************************************************************
#ifndef MODEL_H
#define MODEL_H

#include <iostream>
#include <vector>
#include "Point.h"
#include "Utility.h"


class Model{ 
    private: 
        double a;
        double b;
        double energy;

        std::vector<Point> pointsInModel;

    public:
        //------------------------------------------------------------------------------------------------
        Model(); //Checked
        //------------------------------------------------------------------------------------------------
        Model(const std::vector<Point> & ); //Checked


        //------------------------------------------------------------------------------------------------
        void findBestModel(); //Checked
        //------------------------------------------------------------------------------------------------
        void findBestModel(const std::vector<Point> & ); //Checked


        //------------------------------------------------------------------------------------------------
        double getSlope() const; //Checked
        //------------------------------------------------------------------------------------------------
        double getIntercept() const; //Checked
        //------------------------------------------------------------------------------------------------
        double getEnergy() const; //Checked
        //------------------------------------------------------------------------------------------------
        std::vector<Point> getPointsInModel() const; //Checked
        //------------------------------------------------------------------------------------------------
        std::vector<Point>::const_iterator getPointsVecBegin() const; //Checked
        //------------------------------------------------------------------------------------------------
        std::vector<Point>::const_iterator getPointsVecEnd() const; //Checked
        //------------------------------------------------------------------------------------------------
        int getPointsSize() const; //Checked


        //------------------------------------------------------------------------------------------------
        void pushPoint(const Point & ); //Checked
        //------------------------------------------------------------------------------------------------
        void fuseModel(const Model & );
        //------------------------------------------------------------------------------------------------
        void setEnergy(double ); //Checked
        //------------------------------------------------------------------------------------------------
        void addEnergy(double ); //Checked
        //------------------------------------------------------------------------------------------------
        void clearPoints(); //Checked
        //------------------------------------------------------------------------------------------------
        friend std::ostream & operator << (std::ostream & , const Model & ); //Checked
};


inline Model::Model() : a(MAX_DBL), b(MAX_DBL), energy(MAX_DBL) {} //Checked
//--------------------------------------------------------------------------------------------------------
inline Model::Model(const std::vector<Point> & vec) : a(MAX_DBL), b(MAX_DBL), energy(MAX_DBL) { findBestModel(vec); } //Checked
//--------------------------------------------------------------------------------------------------------


inline double Model::getSlope() const { return this->a; } //Checked
//--------------------------------------------------------------------------------------------------------
inline double Model::getIntercept() const { return this->b; } //Checked
//--------------------------------------------------------------------------------------------------------
inline double Model::getEnergy() const { return this->energy; } //Checked
//--------------------------------------------------------------------------------------------------------
inline std::vector<Point> Model::getPointsInModel() const { return this->pointsInModel; } //Checked
//--------------------------------------------------------------------------------------------------------
inline std::vector<Point>::const_iterator Model::getPointsVecBegin() const { return pointsInModel.begin(); } //Checked
//--------------------------------------------------------------------------------------------------------
inline std::vector<Point>::const_iterator Model::getPointsVecEnd() const { return pointsInModel.end(); } //Checked
//--------------------------------------------------------------------------------------------------------
inline int Model::getPointsSize() const { return pointsInModel.size(); } //Checked


//--------------------------------------------------------------------------------------------------------
inline void Model::pushPoint(const Point & p) { pointsInModel.push_back(p); } //Checked
//--------------------------------------------------------------------------------------------------------
inline void Model::setEnergy(double e) { this->energy = e; } //Checked
//--------------------------------------------------------------------------------------------------------
inline void Model::addEnergy(double e) { this->energy += e; } //Checked
//--------------------------------------------------------------------------------------------------------
inline void Model::clearPoints() { pointsInModel.clear(); } //Checked
//--------------------------------------------------------------------------------------------------------


#endif
//********************************************************************************************************