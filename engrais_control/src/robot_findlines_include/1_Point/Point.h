//********************************************************************************************************
#ifndef POINT_H
#define POINT_H

#include <iostream>

#define MIN_DBL -1e+20
#define MAX_DBL 1e+20

#define MIN_INT -10000000
#define MAX_INT 10000000

class Point{ 

    private: 
        double x = MIN_DBL;
        double y = MIN_DBL;

    public:
        //------------------------------------------------------------------------------------------------
        Point(); //Checked
        //------------------------------------------------------------------------------------------------
        Point(const double , const double ); //Checked


        //------------------------------------------------------------------------------------------------
        double getX() const; //Checked
        //------------------------------------------------------------------------------------------------
        double getY() const; //Checked


        //------------------------------------------------------------------------------------------------
        friend std::ostream & operator << (std::ostream & , const Point & ); //Checked

};


//--------------------------------------------------------------------------------------------------------
inline Point::Point() {} //Checked
//--------------------------------------------------------------------------------------------------------
inline Point::Point(const double xx, const double yy) : x(xx), y(yy) {} //Checked


//--------------------------------------------------------------------------------------------------------
inline double Point::getX() const {return this->x;} //Checked
//--------------------------------------------------------------------------------------------------------
inline double Point::getY() const {return this->y;} //Checked


//--------------------------------------------------------------------------------------------------------
inline std::ostream & operator << (std::ostream &out, const Point &p){ //Checked
    out << "Point: [ x: " << p.x << ", y: " << p.y << " ]";  
    return out; 
}

#endif
//********************************************************************************************************
