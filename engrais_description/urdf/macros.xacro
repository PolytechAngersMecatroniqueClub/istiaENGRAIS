<?xml version="1.0"?>
<!-- macros used to clean the code -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- macros to compute classical inertia matrices -->
    <!-- inertia of a cylinder -->
    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
            iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
            izz="${m*r*r/2}"
        />
    </xacro:macro>
    <!-- inertia of a box -->
    <xacro:macro name="box_inertia" params="m x y z">
        <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
            iyy="${m*(x*x+z*z)/12}" iyz = "0"
            izz="${m*(x*x+z*z)/12}"
        />
    </xacro:macro>
    <!-- inertia of a sphere -->
    <xacro:macro name="sphere_inertia" params="m r">
        <inertia  ixx="${2*m*r*r/5}" ixy = "0" ixz = "0"
            iyy="${2*m*r*r/5}" iyz = "0"
            izz="${2*m*r*r/5}"
        />
    </xacro:macro>

    <!-- macro use for the left and right wheels -->

    <xacro:macro name="wheel" params="leftright parent translateX translateY translateZ wheel_mass wheel_radius wheel_height">
        <!-- defines the link of the wheel -->
        <link name="${leftright}_wheel">
            <visual>
                <origin xyz="0 0 0" rpy="${PI/2} 0  0 " /> 
                <geometry>
                    <cylinder length="${wheel_height}" radius="${wheel_radius}" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${PI/2} 0 0 " />
                <geometry>
                    <cylinder length="${wheel_height}" radius="${wheel_radius}" />
                </geometry>
            </collision>
            <inertial>
                <mass value="${wheel_mass}" />
                <origin xyz="0 0 0" />
                <cylinder_inertia  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
            </inertial>
        </link>

        <!-- defines the joint between the wheel and the body -->
        <joint name="${leftright}_wheel_joint" type="continuous">
            <parent link="${parent}"/>
            <child link="${leftright}_wheel"/>
            <origin xyz="${translateX} ${translateY} ${translateZ}" rpy="0 0 0" /> 
            <axis xyz="0 1 0" rpy="0 0 0" />
            <limit effort="1000" velocity="1000"/>
            <joint_properties damping="0.0" friction="0.0"/>
        </joint>

        <!-- Transmission is important to link the joints and the controller -->
        <transmission name="${leftright}_wheel_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${leftright}_wheel_joint">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="${leftright}_wheel_joint_motor">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
        
        <!-- gazebo informations for the wheel -->
        <gazebo reference="${leftright}_wheel">
            <mu1 value="10"/>
            <mu2 value="10"/>
            <kp  value="10000000.0" />
            <kd  value="1.0" />
            <fdir1 value="1 0 0"/>
            <material>Gazebo/White</material>
        </gazebo>

    </xacro:macro>
</robot>
